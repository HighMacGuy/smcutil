#!/usr/bin/env ruby

$:.unshift File.expand_path('../lib', __dir__)
require_relative '../lib/smcutil'
require 'optparse'

BANNER = <<-BANNER
  Usage: smcutil {command} [PARAMS]

  Command is one of:

    validate {file.smc}:
      Causes smcutil to parse the Apple SMC file and validate correctness.

    info {file.smc}:
      Prints information about the SMC update file.

    decode {file.smc} {output.bin}:
      Pretends to execute an update of the SMC flash as though the output.bin file is the SMC flash ROM.

    save {output.bin}:
      Has magical cow powers.  Assuming I can make this work: GOLDEN TICKET
BANNER

def show_usage
  puts BANNER
  exit
end

command = (ARGV.shift || '').to_sym

COMMANDS = [ :validate, :info, :decode, :save ]

show_usage unless COMMANDS.include? command

case command
  when :validate
    begin
    file = ARGV.shift
    show_usage unless file
    reader = SmcUtil::FileReader.parse file
      puts "The file '#{file}' is valid."
    rescue => ex
      puts ex
    end
  when :decode
    begin
      input = ARGV.shift
      output = ARGV.shift

      show_usage unless input && output
      reader = SmcUtil::FileReader.parse input
      extractor = SmcUtil::FileExtractor.new reader
      extractor.extract_to output
    rescue => ex
      puts ex
    end
  when :info

  else
    show_usage
end